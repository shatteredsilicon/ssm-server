[unix_http_server]
chmod = 0700
username = dummy
password = dummy

[supervisord]
childlogdir = /var/log/supervisor
nodaemon = true
pidfile = /tmp/supervisord.pid

[supervisorctl]
username = dummy
password = dummy
user = root

[program:adjust-mariadb]
priority = 1
command = bash -c "[ -z \"${ON_SSM_SERVER_SETUP}\" ] && [ \"$(stat -L -f -c '%%T' /var/lib/mysql)\" == \"zfs\" ] && sed -i \"/^\\s*innodb_flush_log_at_trx_commit/ s/^/\#/\" /etc/my.cnf.d/00-ssm.cnf || true"
stdout_logfile = /var/log/adjust-mariadb.log
stderr_logfile = /var/log/adjust-mariadb.log

[program:mysql]
priority = 2
user = mysql
command =
    /usr/libexec/mysqld
        --basedir=/usr
        --datadir=/var/lib/mysql
        --plugin-dir=/usr/lib64/mariadb/plugin
        --pid-file=/var/run/mariadb/mysqld.pid
        --socket=/var/lib/mysql/mysql.sock
stdout_logfile = /var/log/mysql.log
stderr_logfile = /var/log/mysql.log
autorestart = true

[program:page-compression]
priority = 3
user = mysql
# Sleep to wait for mysql to start up.
command = bash -c "[ -z \"${ON_SSM_SERVER_SETUP}\" ] && sleep 5 && [ \"$(stat -L -f -c '%%T' /var/lib/mysql)\" == \"zfs\" ] && [ \"1\" == \"$(mysql -uroot -Nse 'select (FLAG&128 = 128) from information_schema.INNODB_SYS_TABLES WHERE NAME=\"ssm/query_class_metrics\"')\" ] && [ $(mysql -uroot -Nse 'select DATA_LENGTH from information_schema.TABLES WHERE TABLE_SCHEMA=\"ssm\" AND TABLE_NAME=\"query_class_metrics\"') -lt $((1*1024*1024*1024)) ] && mysql -uroot -vv -e \"ALTER TABLE ssm.query_class_metrics PAGE_COMPRESSED=0\" || true"
stdout_logfile = /var/log/page-compression.log
stderr_logfile = /var/log/page-compression.log

[program:consul]
priority = 4
user = ssm
command =
    /usr/sbin/consul
        agent
        -server
        -data-dir="/opt/consul-data"
        -bootstrap
        -client="0.0.0.0"
        -advertise="127.0.0.1"
        -ui
stdout_logfile = /var/log/consul.log
stderr_logfile = /var/log/consul.log
autorestart = true

[program:grafana]
priority = 5
user = grafana
directory = /usr/share/grafana
environment = HOME=/usr/share/grafana
command =
    /usr/sbin/grafana-server
        --homepath=/usr/share/grafana
        --config=/etc/grafana/grafana.ini
        cfg:default.paths.data=/var/lib/grafana
        cfg:default.paths.logs=/var/log/grafana
        cfg:default.paths.plugins=/var/lib/grafana/plugins
        cfg:default.server.root_url="%%(protocol)s://%%(domain)s:%%(http_port)s/graph"
        ENV_AUTH_BASIC
# use /var/log/grafana/grafana.log
stdout_logfile = NONE
stderr_logfile = NONE
autorestart = true

[program:nginx]
priority = 6
command = nginx
stdout_logfile = /var/log/nginx.log
stderr_logfile = /var/log/nginx.log
autorestart = true

[program:cron]
priority = 7
command = /usr/sbin/crond -n
stdout_logfile = /var/log/cron.log
stderr_logfile = /var/log/cron.log
autorestart = true

[program:qan-api]
priority = 8
user = ssm
environment = PERCONA_DATASTORE_BASEDIR=/usr/share/ssm-qan-api/src/github.com/shatteredsilicon/qan-api,PERCONA_DATASTORE_CONF=/etc/ssm-qan-api.conf,BASE_PATH=/qan-api
# Sleep to wait for mysql to start up.
command = bash -c "sleep 5 && /usr/sbin/ssm-qan-api -srcPath /usr/share/ssm-qan-api/src -importPath github.com/shatteredsilicon/qan-api -runMode prod"
stdout_logfile = /var/log/qan-api.log
stderr_logfile = /var/log/qan-api.log
startretries = 60
autorestart = true
stopasgroup = true

[program:prometheus]
priority = 9
user = ssm
# --web.enable-lifecycle: ssm-managed uses /-/reload path to reload config.
command =
    /usr/sbin/prometheus
        --config.file=/etc/prometheus.yml
        --storage.tsdb.path=/opt/prometheus/data/.prom2-data
        --storage.tsdb.retention=ENV_METRICS_RETENTION
        --web.listen-address=:9090
        --web.console.libraries=/usr/share/prometheus/console_libraries
        --web.console.templates=/usr/share/prometheus/consoles
        --web.external-url=http://localhost:9090/prometheus/
        --web.enable-admin-api
        --web.enable-lifecycle
stdout_logfile = /var/log/prometheus.log
stderr_logfile = /var/log/prometheus.log
autorestart = true
stopwaitsecs = 300

# This is here to support pmm-data containers of v1.0.4.
[program:createdb]
priority = 10
# Sleep to wait for mysql to start up.
command = bash -c "sleep 5 && mysql -uroot -vv -e \"CREATE DATABASE IF NOT EXISTS orchestrator; GRANT ALL PRIVILEGES ON orchestrator.* TO 'orchestrator'@'localhost' IDENTIFIED BY 'orchestrator'\""
stdout_logfile = /var/log/createdb.log
stderr_logfile = /var/log/createdb.log
startretries = 60
autorestart = unexpected

# support pmm-data containers
[program:createdb2]
priority = 10
# Sleep to wait for mysql to start up.
command = bash -c 'sleep 5 && mysql -uroot -vv -e "CREATE DATABASE IF NOT EXISTS \`ssm-managed\`; GRANT ALL PRIVILEGES ON \`ssm-managed\`.* TO \"ssm-managed\"@localhost IDENTIFIED BY \"ssm-managed\""'
stdout_logfile = /var/log/createdb2.log
stderr_logfile = /var/log/createdb2.log
startretries = 60
autorestart = unexpected

# support pmm-data containers <1.8.0
[program:createdb3]
priority = 10
# Sleep to wait for mysql to start up.
command = bash -c "sleep 5 && mysql -uroot -vv -e \"GRANT SELECT ON ssm.* TO 'grafana'@'localhost' IDENTIFIED BY 'N9mutoipdtlxutgi9rHIFnjM'\""
stdout_logfile = /var/log/createdb3.log
stderr_logfile = /var/log/createdb3.log
startretries = 60
autorestart = unexpected

# support pmm-data containers
[program:createdb4]
priority = 10
# Sleep to wait for mysql to start up.
command = bash -c 'sleep 5 && mysql -uroot -vv -e "CREATE DATABASE IF NOT EXISTS ssm; GRANT ALL PRIVILEGES ON ssm.* TO \"qan-api\"@localhost IDENTIFIED BY \"qan-api\""'
stdout_logfile = /var/log/createdb4.log
stderr_logfile = /var/log/createdb4.log
startretries = 60
autorestart = unexpected

# adding new columns for PMM/SSM v1
[program:add-db-columns]
priority = 11
# Sleep to wait for mysql to start up.
command = bash -c 'sleep 5 && mysql -uroot -vv -e "ALTER TABLE \`ssm\`.\`query_classes\` ADD COLUMN IF NOT EXISTS \`procedures\` TEXT DEFAULT NULL; ALTER TABLE \`ssm\`.\`query_examples\` ADD COLUMN IF NOT EXISTS \`explain\` TEXT DEFAULT NULL;"'
stdout_logfile = /var/log/add-db-columns.log
stderr_logfile = /var/log/add-db-columns.log
startretries = 60
autorestart = unexpected

[program:orchestrator]
priority = 12
user = ssm
directory = /usr/share/orchestrator
# Sleep to wait for mysql to start up.
command = bash -c "sleep 7 && /usr/sbin/orchestrator -verbose http"
stdout_logfile = /var/log/orchestrator.log
stderr_logfile = /var/log/orchestrator.log
startretries = 60
autostart = false
autorestart = true
stopasgroup = true

[program:dashboard-upgrade]
priority = 13
command = /usr/share/ssm-dashboards/import-dashboards.py
stdout_logfile = /var/log/dashboard-upgrade.log
stderr_logfile = /var/log/dashboard-upgrade.log
startsecs = 0
startretries = 60
autorestart = unexpected

[program:node_exporter]
priority = 14
command =
    /opt/ss/ssm-client/node_exporter
        -web.listen-address=localhost:9100
        -collectors.enabled=diskstats,filefd,filesystem,loadavg,meminfo,netdev,netstat,stat,time,uname,vmstat
stdout_logfile = /var/log/node_exporter.log
stderr_logfile = /var/log/node_exporter.log
autorestart = true

[program:ssm-manage]
priority = 15
command =
    /usr/sbin/ssm-configurator
        -ssh-key-owner ssm
        -grafana-db-path /var/lib/grafana/grafana.db
stdout_logfile = /var/log/ssm-manage.log
stderr_logfile = /var/log/ssm-manage.log
autorestart = true

[program:ssm-managed]
priority = 16
command =
    /usr/sbin/ssm-managed
        -prometheus-config /etc/prometheus.yml
        -prometheus-url http://127.0.0.1:9090/prometheus
        -db-name ssm-managed
        -db-username ssm-managed
        -db-password ssm-managed
        -qan-api-config /etc/ssm-qan-api.conf
stdout_logfile = /var/log/ssm-managed.log
stderr_logfile = /var/log/ssm-managed.log
startretries = 1000000
autorestart = true
